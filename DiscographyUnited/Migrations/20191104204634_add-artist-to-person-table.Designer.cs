// <auto-generated />
using System;
using DiscographyUnited.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiscographyUnited.Migrations
{
    [DbContext(typeof(DiscographyUnitedContext))]
    [Migration("20191104204634_add-artist-to-person-table")]
    partial class addartisttopersontable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DiscographyUnited.Entities.AwardEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PersonEntityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonEntityId");

                    b.ToTable("Award");
                });

            modelBuilder.Entity("DiscographyUnited.Entities.GenreEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("DiscographyUnited.Entities.PersonEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeathDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FamilyMemberType")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArtist")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PersonEntityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PersonEntityId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("DiscographyUnited.Entities.RecordEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GenreId")
                        .HasColumnType("bigint");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PersonEntityId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordLength")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("StyleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("PersonEntityId");

                    b.HasIndex("StyleId");

                    b.ToTable("Record");
                });

            modelBuilder.Entity("DiscographyUnited.Entities.StyleEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Style");
                });

            modelBuilder.Entity("DiscographyUnited.Entities.AwardEntity", b =>
                {
                    b.HasOne("DiscographyUnited.Entities.PersonEntity", null)
                        .WithMany("Awards")
                        .HasForeignKey("PersonEntityId");
                });

            modelBuilder.Entity("DiscographyUnited.Entities.PersonEntity", b =>
                {
                    b.HasOne("DiscographyUnited.Entities.PersonEntity", null)
                        .WithMany("FamilyMembers")
                        .HasForeignKey("PersonEntityId");
                });

            modelBuilder.Entity("DiscographyUnited.Entities.RecordEntity", b =>
                {
                    b.HasOne("DiscographyUnited.Entities.GenreEntity", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId");

                    b.HasOne("DiscographyUnited.Entities.PersonEntity", null)
                        .WithMany("Records")
                        .HasForeignKey("PersonEntityId");

                    b.HasOne("DiscographyUnited.Entities.StyleEntity", "Style")
                        .WithMany()
                        .HasForeignKey("StyleId");
                });
#pragma warning restore 612, 618
        }
    }
}
